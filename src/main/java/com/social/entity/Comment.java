package com.social.entity;
// Generated Apr 24, 2017 9:29:38 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name="comment"
    ,catalog="socialsite"
)
public class Comment  implements java.io.Serializable {


     private Long commentId;
     private Post post;
     private Users users;
     private Date commentTime;
     private String commentContent;
     private int commentParentId;
     private Set<CommentLikes> commentLikeses = new HashSet<CommentLikes>(0);

    public Comment() {
    }

	
    public Comment(Post post, Users users, Date commentTime, String commentContent, int commentParentId) {
        this.post = post;
        this.users = users;
        this.commentTime = commentTime;
        this.commentContent = commentContent;
        this.commentParentId = commentParentId;
    }
    public Comment(Post post, Users users, Date commentTime, String commentContent, int commentParentId, Set<CommentLikes> commentLikeses) {
       this.post = post;
       this.users = users;
       this.commentTime = commentTime;
       this.commentContent = commentContent;
       this.commentParentId = commentParentId;
       this.commentLikeses = commentLikeses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="comment_id", unique=true, nullable=false)
    public Long getCommentId() {
        return this.commentId;
    }
    
    public void setCommentId(Long commentId) {
        this.commentId = commentId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="post_id", nullable=false)
    public Post getPost() {
        return this.post;
    }
    
    public void setPost(Post post) {
        this.post = post;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="comment_time", nullable=false, length=19)
    public Date getCommentTime() {
        return this.commentTime;
    }
    
    public void setCommentTime(Date commentTime) {
        this.commentTime = commentTime;
    }

    
    @Column(name="comment_content", nullable=false)
    public String getCommentContent() {
        return this.commentContent;
    }
    
    public void setCommentContent(String commentContent) {
        this.commentContent = commentContent;
    }

    
    @Column(name="comment_parent_id", nullable=false)
    public int getCommentParentId() {
        return this.commentParentId;
    }
    
    public void setCommentParentId(int commentParentId) {
        this.commentParentId = commentParentId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="comment")
    public Set<CommentLikes> getCommentLikeses() {
        return this.commentLikeses;
    }
    
    public void setCommentLikeses(Set<CommentLikes> commentLikeses) {
        this.commentLikeses = commentLikeses;
    }




}


